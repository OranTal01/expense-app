// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ExpenseForm correctly 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <input
    autoFocus={true}
    className="text-input"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <SingleDatePicker
    anchorDirection="left"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    orientation="horizontal"
    phrases={
      Object {
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month",
        "jumpToPrevMonth": "Move backward to switch to the previous month",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
        select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
        "moveFocusByOneMonth": "Switch months",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
        "openThisPanel": "Open this panel",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field",
        "selectFocusedDate": "Select the date in focus",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    renderCalendarInfo={null}
    renderDay={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    withFullScreenPortal={false}
    withPortal={false}
  />
  <textarea
    className="textarea"
    onChange={[Function]}
    placeholder="Add a note for your expense (optional)"
    value=""
  />
  <div>
    <select
      className="select"
      onChange={[Function]}
      value="1"
    >
      <option
        value="1"
      >
        Payments: 1
      </option>
      <option
        value="2"
      >
        Payments: 2
      </option>
      <option
        value="3"
      >
        Payments: 3
      </option>
      <option
        value="4"
      >
        Payments: 4
      </option>
      <option
        value="5"
      >
        Payments: 5
      </option>
      <option
        value="6"
      >
        Payments: 6
      </option>
      <option
        value="7"
      >
        Payments: 7
      </option>
      <option
        value="8"
      >
        Payments: 8
      </option>
      <option
        value="9"
      >
        Payments: 9
      </option>
      <option
        value="10"
      >
        Payments: 10
      </option>
      <option
        value="11"
      >
        Payments: 11
      </option>
      <option
        value="12"
      >
        Payments: 12
      </option>
      <option
        value="13"
      >
        Payments: 13
      </option>
      <option
        value="14"
      >
        Payments: 14
      </option>
      <option
        value="15"
      >
        Payments: 15
      </option>
      <option
        value="16"
      >
        Payments: 16
      </option>
      <option
        value="17"
      >
        Payments: 17
      </option>
      <option
        value="18"
      >
        Payments: 18
      </option>
      <option
        value="19"
      >
        Payments: 19
      </option>
      <option
        value="20"
      >
        Payments: 20
      </option>
      <option
        value="21"
      >
        Payments: 21
      </option>
      <option
        value="22"
      >
        Payments: 22
      </option>
      <option
        value="23"
      >
        Payments: 23
      </option>
      <option
        value="24"
      >
        Payments: 24
      </option>
    </select>
  </div>
  <div>
    <button
      className="button"
    >
      Save Edit Expense
    </button>
  </div>
</form>
`;

exports[`should render ExpenseForm correctly with expense data 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <input
    autoFocus={true}
    className="text-input"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value="Rent"
  />
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value="1095"
  />
  <SingleDatePicker
    anchorDirection="left"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1969-12-28T00:00:00.000Z"}
    daySize={39}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    orientation="horizontal"
    phrases={
      Object {
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month",
        "jumpToPrevMonth": "Move backward to switch to the previous month",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
        select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
        "moveFocusByOneMonth": "Switch months",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
        "openThisPanel": "Open this panel",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field",
        "selectFocusedDate": "Select the date in focus",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    renderCalendarInfo={null}
    renderDay={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    withFullScreenPortal={false}
    withPortal={false}
  />
  <textarea
    className="textarea"
    onChange={[Function]}
    placeholder="Add a note for your expense (optional)"
    value=""
  />
  <div>
    <select
      className="select"
      onChange={[Function]}
      value="1"
    >
      <option
        value="1"
      >
        Payments: 1
      </option>
      <option
        value="2"
      >
        Payments: 2
      </option>
      <option
        value="3"
      >
        Payments: 3
      </option>
      <option
        value="4"
      >
        Payments: 4
      </option>
      <option
        value="5"
      >
        Payments: 5
      </option>
      <option
        value="6"
      >
        Payments: 6
      </option>
      <option
        value="7"
      >
        Payments: 7
      </option>
      <option
        value="8"
      >
        Payments: 8
      </option>
      <option
        value="9"
      >
        Payments: 9
      </option>
      <option
        value="10"
      >
        Payments: 10
      </option>
      <option
        value="11"
      >
        Payments: 11
      </option>
      <option
        value="12"
      >
        Payments: 12
      </option>
      <option
        value="13"
      >
        Payments: 13
      </option>
      <option
        value="14"
      >
        Payments: 14
      </option>
      <option
        value="15"
      >
        Payments: 15
      </option>
      <option
        value="16"
      >
        Payments: 16
      </option>
      <option
        value="17"
      >
        Payments: 17
      </option>
      <option
        value="18"
      >
        Payments: 18
      </option>
      <option
        value="19"
      >
        Payments: 19
      </option>
      <option
        value="20"
      >
        Payments: 20
      </option>
      <option
        value="21"
      >
        Payments: 21
      </option>
      <option
        value="22"
      >
        Payments: 22
      </option>
      <option
        value="23"
      >
        Payments: 23
      </option>
      <option
        value="24"
      >
        Payments: 24
      </option>
    </select>
  </div>
  <div>
    <button
      className="button"
    >
      Save Edit Expense
    </button>
  </div>
</form>
`;

exports[`should render error for invalid form submission 1`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <input
    autoFocus={true}
    className="text-input"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <SingleDatePicker
    anchorDirection="left"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    orientation="horizontal"
    phrases={
      Object {
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month",
        "jumpToPrevMonth": "Move backward to switch to the previous month",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
        select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
        "moveFocusByOneMonth": "Switch months",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
        "openThisPanel": "Open this panel",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field",
        "selectFocusedDate": "Select the date in focus",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    renderCalendarInfo={null}
    renderDay={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    withFullScreenPortal={false}
    withPortal={false}
  />
  <textarea
    className="textarea"
    onChange={[Function]}
    placeholder="Add a note for your expense (optional)"
    value=""
  />
  <div>
    <select
      className="select"
      onChange={[Function]}
      value="1"
    >
      <option
        value="1"
      >
        Payments: 1
      </option>
      <option
        value="2"
      >
        Payments: 2
      </option>
      <option
        value="3"
      >
        Payments: 3
      </option>
      <option
        value="4"
      >
        Payments: 4
      </option>
      <option
        value="5"
      >
        Payments: 5
      </option>
      <option
        value="6"
      >
        Payments: 6
      </option>
      <option
        value="7"
      >
        Payments: 7
      </option>
      <option
        value="8"
      >
        Payments: 8
      </option>
      <option
        value="9"
      >
        Payments: 9
      </option>
      <option
        value="10"
      >
        Payments: 10
      </option>
      <option
        value="11"
      >
        Payments: 11
      </option>
      <option
        value="12"
      >
        Payments: 12
      </option>
      <option
        value="13"
      >
        Payments: 13
      </option>
      <option
        value="14"
      >
        Payments: 14
      </option>
      <option
        value="15"
      >
        Payments: 15
      </option>
      <option
        value="16"
      >
        Payments: 16
      </option>
      <option
        value="17"
      >
        Payments: 17
      </option>
      <option
        value="18"
      >
        Payments: 18
      </option>
      <option
        value="19"
      >
        Payments: 19
      </option>
      <option
        value="20"
      >
        Payments: 20
      </option>
      <option
        value="21"
      >
        Payments: 21
      </option>
      <option
        value="22"
      >
        Payments: 22
      </option>
      <option
        value="23"
      >
        Payments: 23
      </option>
      <option
        value="24"
      >
        Payments: 24
      </option>
    </select>
  </div>
  <div>
    <button
      className="button"
    >
      Save Edit Expense
    </button>
  </div>
</form>
`;

exports[`should render error for invalid form submission 2`] = `
<form
  className="form"
  onSubmit={[Function]}
>
  <input
    autoFocus={true}
    className="text-input"
    onChange={[Function]}
    placeholder="Description"
    type="text"
    value=""
  />
  <p
    className="form__error"
  >
    Please provide description and amount.
  </p>
  <input
    className="text-input"
    onChange={[Function]}
    placeholder="Amount"
    type="text"
    value=""
  />
  <SingleDatePicker
    anchorDirection="left"
    customCloseIcon={null}
    customInputIcon={null}
    date={"1970-01-01T00:00:00.000Z"}
    daySize={39}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    firstDayOfWeek={null}
    focused={false}
    hideKeyboardShortcutsPanel={false}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    orientation="horizontal"
    phrases={
      Object {
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month",
        "jumpToPrevMonth": "Move backward to switch to the previous month",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
        select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
        "moveFocusByOneMonth": "Switch months",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
        "openThisPanel": "Open this panel",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field",
        "selectFocusedDate": "Select the date in focus",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Date"
    readOnly={false}
    renderCalendarInfo={null}
    renderDay={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={false}
    withFullScreenPortal={false}
    withPortal={false}
  />
  <textarea
    className="textarea"
    onChange={[Function]}
    placeholder="Add a note for your expense (optional)"
    value=""
  />
  <div>
    <select
      className="select"
      onChange={[Function]}
      value="1"
    >
      <option
        value="1"
      >
        Payments: 1
      </option>
      <option
        value="2"
      >
        Payments: 2
      </option>
      <option
        value="3"
      >
        Payments: 3
      </option>
      <option
        value="4"
      >
        Payments: 4
      </option>
      <option
        value="5"
      >
        Payments: 5
      </option>
      <option
        value="6"
      >
        Payments: 6
      </option>
      <option
        value="7"
      >
        Payments: 7
      </option>
      <option
        value="8"
      >
        Payments: 8
      </option>
      <option
        value="9"
      >
        Payments: 9
      </option>
      <option
        value="10"
      >
        Payments: 10
      </option>
      <option
        value="11"
      >
        Payments: 11
      </option>
      <option
        value="12"
      >
        Payments: 12
      </option>
      <option
        value="13"
      >
        Payments: 13
      </option>
      <option
        value="14"
      >
        Payments: 14
      </option>
      <option
        value="15"
      >
        Payments: 15
      </option>
      <option
        value="16"
      >
        Payments: 16
      </option>
      <option
        value="17"
      >
        Payments: 17
      </option>
      <option
        value="18"
      >
        Payments: 18
      </option>
      <option
        value="19"
      >
        Payments: 19
      </option>
      <option
        value="20"
      >
        Payments: 20
      </option>
      <option
        value="21"
      >
        Payments: 21
      </option>
      <option
        value="22"
      >
        Payments: 22
      </option>
      <option
        value="23"
      >
        Payments: 23
      </option>
      <option
        value="24"
      >
        Payments: 24
      </option>
    </select>
  </div>
  <div>
    <button
      className="button"
    >
      Save Edit Expense
    </button>
  </div>
</form>
`;
